{"$message_type":"diagnostic","message":"unresolved import `crate::gb::ppu`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":144,"byte_end":147,"line_start":5,"line_end":5,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"use crate::gb::ppu::PPU;","highlight_start":16,"highlight_end":19}],"label":"could not find `ppu` in `gb`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::gb::ppu`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:5:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::gb::ppu::PPU;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `ppu` in `gb`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LCD_STAT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":317,"byte_end":325,"line_start":17,"line_end":17,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LCD_STAT = 0x02,","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":317,"byte_end":325,"line_start":17,"line_end":17,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LCD_STAT = 0x02,","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"LcdStat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LCD_STAT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:17:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LCD_STAT = 0x02,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LcdStat`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LCD_STAT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":431,"byte_end":439,"line_start":25,"line_end":25,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LCD_STAT = 0x48,","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":431,"byte_end":439,"line_start":25,"line_end":25,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LCD_STAT = 0x48,","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"LcdStat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LCD_STAT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:25:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LCD_STAT = 0x48,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LcdStat`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `ADD_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":753,"byte_end":760,"line_start":45,"line_end":45,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADD_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":753,"byte_end":760,"line_start":45,"line_end":45,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADD_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"AddImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ADD_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:45:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  ADD_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AddImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `ADC_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":768,"byte_end":775,"line_start":46,"line_end":46,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADC_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":768,"byte_end":775,"line_start":46,"line_end":46,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADC_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"AdcImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ADC_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:46:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  ADC_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AdcImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `SUB_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":783,"byte_end":790,"line_start":47,"line_end":47,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SUB_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":783,"byte_end":790,"line_start":47,"line_end":47,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SUB_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"SubImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SUB_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:47:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  SUB_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SubImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `SBC_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":798,"byte_end":805,"line_start":48,"line_end":48,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SBC_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":798,"byte_end":805,"line_start":48,"line_end":48,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SBC_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"SbcImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SBC_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:48:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  SBC_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SbcImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `AND_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":813,"byte_end":820,"line_start":49,"line_end":49,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  AND_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":813,"byte_end":820,"line_start":49,"line_end":49,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  AND_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"AndImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `AND_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:49:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  AND_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AndImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `OR_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":828,"byte_end":834,"line_start":50,"line_end":50,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  OR_IMM(u8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":828,"byte_end":834,"line_start":50,"line_end":50,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  OR_IMM(u8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"OrImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `OR_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:50:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  OR_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `OrImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `XOR_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":842,"byte_end":849,"line_start":51,"line_end":51,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  XOR_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":842,"byte_end":849,"line_start":51,"line_end":51,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  XOR_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"XorImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `XOR_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:51:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  XOR_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `XorImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `CP_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":857,"byte_end":863,"line_start":52,"line_end":52,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  CP_IMM(u8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":857,"byte_end":863,"line_start":52,"line_end":52,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  CP_IMM(u8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"CpImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CP_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:52:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  CP_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CpImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `ADD_HL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":872,"byte_end":878,"line_start":54,"line_end":54,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  ADD_HL(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":872,"byte_end":878,"line_start":54,"line_end":54,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  ADD_HL(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"AddHl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ADD_HL` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:54:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  ADD_HL(ArithmeticTarget, ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AddHl`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `INC_16` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":985,"byte_end":991,"line_start":60,"line_end":60,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  INC_16(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":985,"byte_end":991,"line_start":60,"line_end":60,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  INC_16(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"Inc16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INC_16` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:60:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  INC_16(ArithmeticTarget, ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Inc16`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `DEC_16` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1031,"byte_end":1037,"line_start":61,"line_end":61,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  DEC_16(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1031,"byte_end":1037,"line_start":61,"line_end":61,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  DEC_16(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"Dec16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DEC_16` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:61:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  DEC_16(ArithmeticTarget, ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Dec16`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `RET_N` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1280,"byte_end":1285,"line_start":73,"line_end":73,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  RET_N(bool, bool),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1280,"byte_end":1285,"line_start":73,"line_end":73,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  RET_N(bool, bool),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":"RetN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `RET_N` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:73:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  RET_N(bool, bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RetN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `JP_HL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1400,"byte_end":1405,"line_start":78,"line_end":78,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  JP_HL(),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1400,"byte_end":1405,"line_start":78,"line_end":78,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  JP_HL(),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":"JpHl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `JP_HL` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:78:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  JP_HL(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `JpHl`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_RR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1439,"byte_end":1444,"line_start":81,"line_end":81,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  LD_RR(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1439,"byte_end":1444,"line_start":81,"line_end":81,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  LD_RR(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":"LdRr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_RR` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:81:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_RR(ArithmeticTarget, ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdRr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_MEM_REG` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1484,"byte_end":1494,"line_start":82,"line_end":82,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_REG(ArithmeticTarget),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1484,"byte_end":1494,"line_start":82,"line_end":82,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_REG(ArithmeticTarget),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":"LdMemReg","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_MEM_REG` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:82:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_MEM_REG(ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdMemReg`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_REG_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1516,"byte_end":1526,"line_start":83,"line_end":83,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_REG_MEM(ArithmeticTarget),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1516,"byte_end":1526,"line_start":83,"line_end":83,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_REG_MEM(ArithmeticTarget),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":"LdRegMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_REG_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:83:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_REG_MEM(ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdRegMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_MEM_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1548,"byte_end":1558,"line_start":84,"line_end":84,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_IMM(u8),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1548,"byte_end":1558,"line_start":84,"line_end":84,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_IMM(u8),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":"LdMemImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_MEM_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:84:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_MEM_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdMemImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_REG_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1566,"byte_end":1576,"line_start":85,"line_end":85,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_REG_IMM(ArithmeticTarget, u8),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1566,"byte_end":1576,"line_start":85,"line_end":85,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_REG_IMM(ArithmeticTarget, u8),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":"LdRegImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_REG_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:85:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_REG_IMM(ArithmeticTarget, u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdRegImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_MEM_INC` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1602,"byte_end":1612,"line_start":86,"line_end":86,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_INC(bool, bool),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1602,"byte_end":1612,"line_start":86,"line_end":86,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_INC(bool, bool),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":"LdMemInc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_MEM_INC` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:86:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_MEM_INC(bool, bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdMemInc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_BCDE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1628,"byte_end":1635,"line_start":87,"line_end":87,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  LD_BCDE(ArithmeticTarget, ArithmeticTarget, bool),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1628,"byte_end":1635,"line_start":87,"line_end":87,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  LD_BCDE(ArithmeticTarget, ArithmeticTarget, bool),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"LdBcde","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_BCDE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:87:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_BCDE(ArithmeticTarget, ArithmeticTarget, bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdBcde`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_IMM_16` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1681,"byte_end":1690,"line_start":88,"line_end":88,"column_start":3,"column_end":12,"is_primary":true,"text":[{"text":"  LD_IMM_16(u16, bool),","highlight_start":3,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1681,"byte_end":1690,"line_start":88,"line_end":88,"column_start":3,"column_end":12,"is_primary":true,"text":[{"text":"  LD_IMM_16(u16, bool),","highlight_start":3,"highlight_end":12}],"label":null,"suggested_replacement":"LdImm16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_IMM_16` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:88:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_IMM_16(u16, bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdImm16`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_IMM_8` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1705,"byte_end":1713,"line_start":89,"line_end":89,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LD_IMM_8(u8, bool),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1705,"byte_end":1713,"line_start":89,"line_end":89,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LD_IMM_8(u8, bool),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"LdImm8","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_IMM_8` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:89:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_IMM_8(u8, bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdImm8`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_AC` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1727,"byte_end":1732,"line_start":90,"line_end":90,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  LD_AC(bool),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1727,"byte_end":1732,"line_start":90,"line_end":90,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  LD_AC(bool),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":"LdAc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_AC` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:90:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_AC(bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdAc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_REG_IMM_16` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1742,"byte_end":1755,"line_start":91,"line_end":91,"column_start":3,"column_end":16,"is_primary":true,"text":[{"text":"  LD_REG_IMM_16(ArithmeticTarget, ArithmeticTarget, u16),","highlight_start":3,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1742,"byte_end":1755,"line_start":91,"line_end":91,"column_start":3,"column_end":16,"is_primary":true,"text":[{"text":"  LD_REG_IMM_16(ArithmeticTarget, ArithmeticTarget, u16),","highlight_start":3,"highlight_end":16}],"label":null,"suggested_replacement":"LdRegImm16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_REG_IMM_16` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:91:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_REG_IMM_16(ArithmeticTarget, ArithmeticTarget, u16),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdRegImm16`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `MOD_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1800,"byte_end":1807,"line_start":92,"line_end":92,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  MOD_MEM(bool),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1800,"byte_end":1807,"line_start":92,"line_end":92,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  MOD_MEM(bool),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"ModMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MOD_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:92:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  MOD_MEM(bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ModMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `STORE_SP` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1818,"byte_end":1826,"line_start":94,"line_end":94,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  STORE_SP(u16),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1818,"byte_end":1826,"line_start":94,"line_end":94,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  STORE_SP(u16),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"StoreSp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STORE_SP` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:94:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  STORE_SP(u16),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StoreSp`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `INC_SP` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1835,"byte_end":1841,"line_start":95,"line_end":95,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  INC_SP(i8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1835,"byte_end":1841,"line_start":95,"line_end":95,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  INC_SP(i8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"IncSp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INC_SP` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:95:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  INC_SP(i8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IncSp`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_SP_HL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1849,"byte_end":1857,"line_start":96,"line_end":96,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LD_SP_HL(),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1849,"byte_end":1857,"line_start":96,"line_end":96,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LD_SP_HL(),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"LdSpHl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_SP_HL` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:96:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_SP_HL(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdSpHl`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around method argument","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25212,"byte_end":25213,"line_start":783,"line_end":783,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"    self.set_flags(false, true, (flags & (FlagMasks::ZERO as u8) != 0), false);","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25249,"byte_end":25250,"line_start":783,"line_end":783,"column_start":70,"column_end":71,"is_primary":true,"text":[{"text":"    self.set_flags(false, true, (flags & (FlagMasks::ZERO as u8) != 0), false);","highlight_start":70,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25212,"byte_end":25213,"line_start":783,"line_end":783,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"    self.set_flags(false, true, (flags & (FlagMasks::ZERO as u8) != 0), false);","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25249,"byte_end":25250,"line_start":783,"line_end":783,"column_start":70,"column_end":71,"is_primary":true,"text":[{"text":"    self.set_flags(false, true, (flags & (FlagMasks::ZERO as u8) != 0), false);","highlight_start":70,"highlight_end":71}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around method argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:783:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m783\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self.set_flags(false, true, (flags & (FlagMasks::ZERO as u8) != 0), false);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m783\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    self.set_flags(false, true, \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mflags & (FlagMasks::ZERO as u8) != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m, false);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m783\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    self.set_flags(false, true, flags & (FlagMasks::ZERO as u8) != 0, false);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around method argument","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25395,"byte_end":25396,"line_start":788,"line_end":788,"column_start":69,"column_end":70,"is_primary":true,"text":[{"text":"    self.set_flags(false, !(flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), false);","highlight_start":69,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25432,"byte_end":25433,"line_start":788,"line_end":788,"column_start":106,"column_end":107,"is_primary":true,"text":[{"text":"    self.set_flags(false, !(flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), false);","highlight_start":106,"highlight_end":107}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25395,"byte_end":25396,"line_start":788,"line_end":788,"column_start":69,"column_end":70,"is_primary":true,"text":[{"text":"    self.set_flags(false, !(flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), false);","highlight_start":69,"highlight_end":70}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25432,"byte_end":25433,"line_start":788,"line_end":788,"column_start":106,"column_end":107,"is_primary":true,"text":[{"text":"    self.set_flags(false, !(flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), false);","highlight_start":106,"highlight_end":107}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around method argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:788:69\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m788\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self.set_flags(false, !(flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), false);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m788\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    self.set_flags(false, !(flags & (FlagMasks::CARRY as u8) != 0), \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mflags & (FlagMasks::ZERO as u8) != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m, false);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m788\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    self.set_flags(false, !(flags & (FlagMasks::CARRY as u8) != 0), flags & (FlagMasks::ZERO as u8) != 0, false);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around method argument","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25601,"byte_end":25602,"line_start":795,"line_end":795,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), true);","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25639,"byte_end":25640,"line_start":795,"line_end":795,"column_start":64,"column_end":65,"is_primary":true,"text":[{"text":"    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), true);","highlight_start":64,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25601,"byte_end":25602,"line_start":795,"line_end":795,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), true);","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25639,"byte_end":25640,"line_start":795,"line_end":795,"column_start":64,"column_end":65,"is_primary":true,"text":[{"text":"    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), true);","highlight_start":64,"highlight_end":65}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around method argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:795:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), true);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    self.set_flags(true, \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mflags & (FlagMasks::CARRY as u8) != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m, (flags & (FlagMasks::ZERO as u8) != 0), true);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    self.set_flags(true, flags & (FlagMasks::CARRY as u8) != 0, (flags & (FlagMasks::ZERO as u8) != 0), true);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around method argument","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25642,"byte_end":25643,"line_start":795,"line_end":795,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), true);","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25679,"byte_end":25680,"line_start":795,"line_end":795,"column_start":104,"column_end":105,"is_primary":true,"text":[{"text":"    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), true);","highlight_start":104,"highlight_end":105}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25642,"byte_end":25643,"line_start":795,"line_end":795,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), true);","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25679,"byte_end":25680,"line_start":795,"line_end":795,"column_start":104,"column_end":105,"is_primary":true,"text":[{"text":"    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), true);","highlight_start":104,"highlight_end":105}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around method argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:795:67\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), (flags & (FlagMasks::ZERO as u8) != 0), true);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mflags & (FlagMasks::ZERO as u8) != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m, true);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    self.set_flags(true, (flags & (FlagMasks::CARRY as u8) != 0), flags & (FlagMasks::ZERO as u8) != 0, true);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `HALF_CARRY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/register.rs","byte_start":856,"byte_end":866,"line_start":42,"line_end":42,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    HALF_CARRY = 0b00100000,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/register.rs","byte_start":856,"byte_end":866,"line_start":42,"line_end":42,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    HALF_CARRY = 0b00100000,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"HalfCarry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `HALF_CARRY` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/register.rs:42:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    HALF_CARRY = 0b00100000,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `HalfCarry`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":10895,"byte_end":10907,"line_start":363,"line_end":363,"column_start":67,"column_end":79,"is_primary":true,"text":[{"text":"    let (result, carry) = self.registers.get_sp().overflowing_add(value as i16);","highlight_start":67,"highlight_end":79}],"label":"expected `u16`, found `i16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":10879,"byte_end":10894,"line_start":363,"line_end":363,"column_start":51,"column_end":66,"is_primary":false,"text":[{"text":"    let (result, carry) = self.registers.get_sp().overflowing_add(value as i16);","highlight_start":51,"highlight_end":66}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"/Users/rene/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs","byte_start":92887,"byte_end":92902,"line_start":2350,"line_end":2350,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"        pub const fn overflowing_add(self, rhs: Self) -> (Self, bool) {","highlight_start":22,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/rene/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs","byte_start":34769,"byte_end":35242,"line_start":1051,"line_end":1069,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    uint_impl! {","highlight_start":5,"highlight_end":1},{"text":"        Self = u16,","highlight_start":1,"highlight_end":1},{"text":"        ActualT = u16,","highlight_start":1,"highlight_end":1},{"text":"        SignedT = i16,","highlight_start":1,"highlight_end":1},{"text":"        BITS = 16,","highlight_start":1,"highlight_end":1},{"text":"        BITS_MINUS_ONE = 15,","highlight_start":1,"highlight_end":1},{"text":"        MAX = 65535,","highlight_start":1,"highlight_end":1},{"text":"        rot = 4,","highlight_start":1,"highlight_end":1},{"text":"        rot_op = \"0xa003\",","highlight_start":1,"highlight_end":1},{"text":"        rot_result = \"0x3a\",","highlight_start":1,"highlight_end":1},{"text":"        swap_op = \"0x1234\",","highlight_start":1,"highlight_end":1},{"text":"        swapped = \"0x3412\",","highlight_start":1,"highlight_end":1},{"text":"        reversed = \"0x2c48\",","highlight_start":1,"highlight_end":1},{"text":"        le_bytes = \"[0x34, 0x12]\",","highlight_start":1,"highlight_end":1},{"text":"        be_bytes = \"[0x12, 0x34]\",","highlight_start":1,"highlight_end":1},{"text":"        to_xe_bytes_doc = \"\",","highlight_start":1,"highlight_end":1},{"text":"        from_xe_bytes_doc = \"\",","highlight_start":1,"highlight_end":1},{"text":"        bound_condition = \"\",","highlight_start":1,"highlight_end":1},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"uint_impl!","def_site_span":{"file_name":"/Users/rene/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! uint_impl {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"you can convert an `i16` to a `u16` and panic if the converted value doesn't fit","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":10895,"byte_end":10895,"line_start":363,"line_end":363,"column_start":67,"column_end":67,"is_primary":true,"text":[{"text":"    let (result, carry) = self.registers.get_sp().overflowing_add(value as i16);","highlight_start":67,"highlight_end":67}],"label":null,"suggested_replacement":"(","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":10907,"byte_end":10907,"line_start":363,"line_end":363,"column_start":79,"column_end":79,"is_primary":true,"text":[{"text":"    let (result, carry) = self.registers.get_sp().overflowing_add(value as i16);","highlight_start":79,"highlight_end":79}],"label":null,"suggested_replacement":").try_into().unwrap()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:363:67\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m363\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (result, carry) = self.registers.get_sp().overflowing_add(value as i16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u16`, found `i16`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this method are incorrect\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/rene/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs:1051:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1051\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    uint_impl! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1052\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Self = u16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1053\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ActualT = u16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1054\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SignedT = i16,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1068\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        bound_condition = \"\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1069\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_____^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `uint_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can convert an `i16` to a `u16` and panic if the converted value doesn't fit\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m363\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (result, carry) = self.registers.get_sp().overflowing_add(\u001b[0m\u001b[0m\u001b[38;5;10m(\u001b[0m\u001b[0mvalue as i16\u001b[0m\u001b[0m\u001b[38;5;10m).try_into().unwrap()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":41223,"byte_end":41225,"line_start":1169,"line_end":1169,"column_start":50,"column_end":52,"is_primary":true,"text":[{"text":"      0x86 => Instruction::ADD(ArithmeticTarget::HL), // ADD A, (HL) // TODO: what's happening herer??","highlight_start":50,"highlight_end":52}],"label":"variant or associated item not found in `ArithmeticTarget`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":1889,"byte_end":1910,"line_start":104,"line_end":104,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"enum ArithmeticTarget {","highlight_start":1,"highlight_end":22}],"label":"variant or associated item `HL` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":41223,"byte_end":41226,"line_start":1169,"line_end":1169,"column_start":50,"column_end":53,"is_primary":true,"text":[{"text":"      0x86 => Instruction::ADD(ArithmeticTarget::HL), // ADD A, (HL) // TODO: what's happening herer??","highlight_start":50,"highlight_end":53}],"label":null,"suggested_replacement":"H","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1169:50\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum ArithmeticTarget {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `HL` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0x86 => Instruction::ADD(ArithmeticTarget::HL), // ADD A, (HL) // TODO: what's happening herer??\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ArithmeticTarget`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a variant with a similar name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m      0x86 => Instruction::ADD(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;9mHL)\u001b[0m\u001b[0m, // ADD A, (HL) // TODO: what's happening herer??\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m      0x86 => Instruction::ADD(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;10mH\u001b[0m\u001b[0m, // ADD A, (HL) // TODO: what's happening herer??\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":41781,"byte_end":41783,"line_start":1177,"line_end":1177,"column_start":50,"column_end":52,"is_primary":true,"text":[{"text":"      0x8E => Instruction::ADC(ArithmeticTarget::HL), // ADC A, (HL)","highlight_start":50,"highlight_end":52}],"label":"variant or associated item not found in `ArithmeticTarget`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":1889,"byte_end":1910,"line_start":104,"line_end":104,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"enum ArithmeticTarget {","highlight_start":1,"highlight_end":22}],"label":"variant or associated item `HL` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":41781,"byte_end":41784,"line_start":1177,"line_end":1177,"column_start":50,"column_end":53,"is_primary":true,"text":[{"text":"      0x8E => Instruction::ADC(ArithmeticTarget::HL), // ADC A, (HL)","highlight_start":50,"highlight_end":53}],"label":null,"suggested_replacement":"H","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1177:50\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum ArithmeticTarget {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `HL` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0x8E => Instruction::ADC(ArithmeticTarget::HL), // ADC A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ArithmeticTarget`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a variant with a similar name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m      0x8E => Instruction::ADC(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;9mHL)\u001b[0m\u001b[0m, // ADC A, (HL)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m      0x8E => Instruction::ADC(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;10mH\u001b[0m\u001b[0m, // ADC A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":42311,"byte_end":42313,"line_start":1186,"line_end":1186,"column_start":50,"column_end":52,"is_primary":true,"text":[{"text":"      0x96 => Instruction::SUB(ArithmeticTarget::HL), // SUB A, (HL)","highlight_start":50,"highlight_end":52}],"label":"variant or associated item not found in `ArithmeticTarget`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":1889,"byte_end":1910,"line_start":104,"line_end":104,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"enum ArithmeticTarget {","highlight_start":1,"highlight_end":22}],"label":"variant or associated item `HL` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":42311,"byte_end":42314,"line_start":1186,"line_end":1186,"column_start":50,"column_end":53,"is_primary":true,"text":[{"text":"      0x96 => Instruction::SUB(ArithmeticTarget::HL), // SUB A, (HL)","highlight_start":50,"highlight_end":53}],"label":null,"suggested_replacement":"H","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1186:50\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum ArithmeticTarget {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `HL` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0x96 => Instruction::SUB(ArithmeticTarget::HL), // SUB A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ArithmeticTarget`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a variant with a similar name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m      0x96 => Instruction::SUB(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;9mHL)\u001b[0m\u001b[0m, // SUB A, (HL)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m      0x96 => Instruction::SUB(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;10mH\u001b[0m\u001b[0m, // SUB A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":42835,"byte_end":42837,"line_start":1194,"line_end":1194,"column_start":50,"column_end":52,"is_primary":true,"text":[{"text":"      0x9E => Instruction::SBC(ArithmeticTarget::HL), // SBC A, (HL)","highlight_start":50,"highlight_end":52}],"label":"variant or associated item not found in `ArithmeticTarget`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":1889,"byte_end":1910,"line_start":104,"line_end":104,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"enum ArithmeticTarget {","highlight_start":1,"highlight_end":22}],"label":"variant or associated item `HL` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":42835,"byte_end":42838,"line_start":1194,"line_end":1194,"column_start":50,"column_end":53,"is_primary":true,"text":[{"text":"      0x9E => Instruction::SBC(ArithmeticTarget::HL), // SBC A, (HL)","highlight_start":50,"highlight_end":53}],"label":null,"suggested_replacement":"H","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1194:50\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum ArithmeticTarget {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `HL` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0x9E => Instruction::SBC(ArithmeticTarget::HL), // SBC A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ArithmeticTarget`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a variant with a similar name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m      0x9E => Instruction::SBC(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;9mHL)\u001b[0m\u001b[0m, // SBC A, (HL)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m      0x9E => Instruction::SBC(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;10mH\u001b[0m\u001b[0m, // SBC A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":43364,"byte_end":43366,"line_start":1203,"line_end":1203,"column_start":50,"column_end":52,"is_primary":true,"text":[{"text":"      0xA6 => Instruction::AND(ArithmeticTarget::HL), // AND A, (HL)","highlight_start":50,"highlight_end":52}],"label":"variant or associated item not found in `ArithmeticTarget`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":1889,"byte_end":1910,"line_start":104,"line_end":104,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"enum ArithmeticTarget {","highlight_start":1,"highlight_end":22}],"label":"variant or associated item `HL` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":43364,"byte_end":43367,"line_start":1203,"line_end":1203,"column_start":50,"column_end":53,"is_primary":true,"text":[{"text":"      0xA6 => Instruction::AND(ArithmeticTarget::HL), // AND A, (HL)","highlight_start":50,"highlight_end":53}],"label":null,"suggested_replacement":"H","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1203:50\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum ArithmeticTarget {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `HL` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xA6 => Instruction::AND(ArithmeticTarget::HL), // AND A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ArithmeticTarget`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a variant with a similar name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m      0xA6 => Instruction::AND(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;9mHL)\u001b[0m\u001b[0m, // AND A, (HL)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m      0xA6 => Instruction::AND(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;10mH\u001b[0m\u001b[0m, // AND A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":43888,"byte_end":43890,"line_start":1211,"line_end":1211,"column_start":50,"column_end":52,"is_primary":true,"text":[{"text":"      0xAE => Instruction::XOR(ArithmeticTarget::HL), // XOR A, (HL)","highlight_start":50,"highlight_end":52}],"label":"variant or associated item not found in `ArithmeticTarget`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":1889,"byte_end":1910,"line_start":104,"line_end":104,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"enum ArithmeticTarget {","highlight_start":1,"highlight_end":22}],"label":"variant or associated item `HL` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":43888,"byte_end":43891,"line_start":1211,"line_end":1211,"column_start":50,"column_end":53,"is_primary":true,"text":[{"text":"      0xAE => Instruction::XOR(ArithmeticTarget::HL), // XOR A, (HL)","highlight_start":50,"highlight_end":53}],"label":null,"suggested_replacement":"H","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1211:50\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum ArithmeticTarget {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `HL` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xAE => Instruction::XOR(ArithmeticTarget::HL), // XOR A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ArithmeticTarget`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a variant with a similar name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m      0xAE => Instruction::XOR(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;9mHL)\u001b[0m\u001b[0m, // XOR A, (HL)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m      0xAE => Instruction::XOR(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;10mH\u001b[0m\u001b[0m, // XOR A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":44400,"byte_end":44402,"line_start":1220,"line_end":1220,"column_start":49,"column_end":51,"is_primary":true,"text":[{"text":"      0xB6 => Instruction::OR(ArithmeticTarget::HL), // OR A, (HL)","highlight_start":49,"highlight_end":51}],"label":"variant or associated item not found in `ArithmeticTarget`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":1889,"byte_end":1910,"line_start":104,"line_end":104,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"enum ArithmeticTarget {","highlight_start":1,"highlight_end":22}],"label":"variant or associated item `HL` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":44400,"byte_end":44403,"line_start":1220,"line_end":1220,"column_start":49,"column_end":52,"is_primary":true,"text":[{"text":"      0xB6 => Instruction::OR(ArithmeticTarget::HL), // OR A, (HL)","highlight_start":49,"highlight_end":52}],"label":null,"suggested_replacement":"H","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1220:49\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum ArithmeticTarget {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `HL` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xB6 => Instruction::OR(ArithmeticTarget::HL), // OR A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ArithmeticTarget`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a variant with a similar name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m      0xB6 => Instruction::OR(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;9mHL)\u001b[0m\u001b[0m, // OR A, (HL)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m      0xB6 => Instruction::OR(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;10mH\u001b[0m\u001b[0m, // OR A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":44908,"byte_end":44910,"line_start":1228,"line_end":1228,"column_start":49,"column_end":51,"is_primary":true,"text":[{"text":"      0xBE => Instruction::CP(ArithmeticTarget::HL), // CP A, (HL)","highlight_start":49,"highlight_end":51}],"label":"variant or associated item not found in `ArithmeticTarget`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":1889,"byte_end":1910,"line_start":104,"line_end":104,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"enum ArithmeticTarget {","highlight_start":1,"highlight_end":22}],"label":"variant or associated item `HL` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":44908,"byte_end":44911,"line_start":1228,"line_end":1228,"column_start":49,"column_end":52,"is_primary":true,"text":[{"text":"      0xBE => Instruction::CP(ArithmeticTarget::HL), // CP A, (HL)","highlight_start":49,"highlight_end":52}],"label":null,"suggested_replacement":"H","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `HL` found for enum `ArithmeticTarget` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1228:49\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum ArithmeticTarget {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `HL` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xBE => Instruction::CP(ArithmeticTarget::HL), // CP A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ArithmeticTarget`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a variant with a similar name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m      0xBE => Instruction::CP(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;9mHL)\u001b[0m\u001b[0m, // CP A, (HL)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m      0xBE => Instruction::CP(ArithmeticTarget::\u001b[0m\u001b[0m\u001b[38;5;10mH\u001b[0m\u001b[0m, // CP A, (HL)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `LD_HL_SP` found for enum `Instruction` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":48807,"byte_end":48815,"line_start":1290,"line_end":1290,"column_start":28,"column_end":36,"is_primary":true,"text":[{"text":"      0xF8 => Instruction::LD_HL_SP(ArithmeticTarget::SP, immediate1), // LD HL, SP+r8 // did i not do this???","highlight_start":28,"highlight_end":36}],"label":"variant or associated item not found in `Instruction`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":502,"byte_end":518,"line_start":32,"line_end":32,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"enum Instruction {","highlight_start":1,"highlight_end":17}],"label":"variant or associated item `LD_HL_SP` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":48807,"byte_end":48815,"line_start":1290,"line_end":1290,"column_start":28,"column_end":36,"is_primary":true,"text":[{"text":"      0xF8 => Instruction::LD_HL_SP(ArithmeticTarget::SP, immediate1), // LD HL, SP+r8 // did i not do this???","highlight_start":28,"highlight_end":36}],"label":null,"suggested_replacement":"LD_SP_HL","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":48816,"byte_end":48848,"line_start":1290,"line_end":1290,"column_start":37,"column_end":69,"is_primary":true,"text":[{"text":"      0xF8 => Instruction::LD_HL_SP(ArithmeticTarget::SP, immediate1), // LD HL, SP+r8 // did i not do this???","highlight_start":37,"highlight_end":69}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `LD_HL_SP` found for enum `Instruction` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1290:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Instruction {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `LD_HL_SP` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xF8 => Instruction::LD_HL_SP(ArithmeticTarget::SP, immediate1), // LD HL, SP+r8 // did i not do this???\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Instruction`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a variant with a similar name\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m      0xF8 => Instruction::\u001b[0m\u001b[0m\u001b[38;5;9mLD_HL_SP\u001b[0m\u001b[0m(\u001b[0m\u001b[0m\u001b[38;5;9mArithmeticTarget::SP, immediate1\u001b[0m\u001b[0m), // LD HL, SP+r8 // did i not do this???\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m      0xF8 => Instruction::\u001b[0m\u001b[0m\u001b[38;5;10mLD_SP_HL\u001b[0m\u001b[0m(), // LD HL, SP+r8 // did i not do this???\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/gb/cpu.rs","byte_start":30417,"byte_end":30428,"line_start":1019,"line_end":1019,"column_start":47,"column_end":58,"is_primary":true,"text":[{"text":"  fn decode_instruction(&self, opcode: u8) -> Instruction {","highlight_start":47,"highlight_end":58}],"label":"expected `Instruction`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":30376,"byte_end":30394,"line_start":1019,"line_end":1019,"column_start":6,"column_end":24,"is_primary":false,"text":[{"text":"  fn decode_instruction(&self, opcode: u8) -> Instruction {","highlight_start":6,"highlight_end":24}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1019:47\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1019\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn decode_instruction(&self, opcode: u8) -> Instruction {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Instruction`, found `()`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":5984,"byte_end":5985,"line_start":222,"line_end":222,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        _ => panic!(\"Invalid get method\"),","highlight_start":9,"highlight_end":10}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"multiple earlier patterns match some of the same values","code":null,"level":"note","spans":[{"file_name":"src/gb/cpu.rs","byte_start":5466,"byte_end":5485,"line_start":213,"line_end":213,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::A => self.registers.get_a(),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5521,"byte_end":5540,"line_start":214,"line_end":214,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::B => self.registers.get_b(),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5576,"byte_end":5595,"line_start":215,"line_end":215,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::C => self.registers.get_c(),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5631,"byte_end":5650,"line_start":216,"line_end":216,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::D => self.registers.get_d(),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5984,"byte_end":5985,"line_start":222,"line_end":222,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        _ => panic!(\"Invalid get method\"),","highlight_start":9,"highlight_end":10}],"label":"...and 5 other patterns collectively make this unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`#[warn(unreachable_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:222:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => panic!(\"Invalid get method\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: multiple earlier patterns match some of the same values\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:222:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::A => self.registers.get_a(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::B => self.registers.get_b(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::C => self.registers.get_c(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::D => self.registers.get_d(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => panic!(\"Invalid get method\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m...and 5 other patterns collectively make this unreachable\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_patterns)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":6622,"byte_end":6623,"line_start":235,"line_end":235,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        _ => panic!(\"Invalid set method\"),","highlight_start":9,"highlight_end":10}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"multiple earlier patterns match some of the same values","code":null,"level":"note","spans":[{"file_name":"src/gb/cpu.rs","byte_start":6059,"byte_end":6078,"line_start":226,"line_end":226,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::A => self.registers.set_a(value),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":6119,"byte_end":6138,"line_start":227,"line_end":227,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::B => self.registers.set_b(value),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":6179,"byte_end":6198,"line_start":228,"line_end":228,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::C => self.registers.set_c(value),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":6239,"byte_end":6258,"line_start":229,"line_end":229,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::D => self.registers.set_d(value),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":6622,"byte_end":6623,"line_start":235,"line_end":235,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        _ => panic!(\"Invalid set method\"),","highlight_start":9,"highlight_end":10}],"label":"...and 5 other patterns collectively make this unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:235:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => panic!(\"Invalid set method\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: multiple earlier patterns match some of the same values\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:235:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::A => self.registers.set_a(value),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::B => self.registers.set_b(value),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::C => self.registers.set_c(value),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::D => self.registers.set_d(value),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => panic!(\"Invalid set method\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m...and 5 other patterns collectively make this unreachable\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `value` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":21087,"byte_end":21092,"line_start":649,"line_end":649,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let value: u16; ","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_value` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `value` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:649:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m649\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let value: u16; \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_value` instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `value` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":21193,"byte_end":21198,"line_start":652,"line_end":652,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        value = self.registers.get_bc();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `value` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:652:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m652\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        value = self.registers.get_bc();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `value` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":21356,"byte_end":21361,"line_start":656,"line_end":656,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        value = self.registers.get_de();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `value` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:656:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        value = self.registers.get_de();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `value` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":21519,"byte_end":21524,"line_start":660,"line_end":660,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        value = self.registers.get_hl();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `value` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:660:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        value = self.registers.get_hl();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `half_carry`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":22037,"byte_end":22047,"line_start":679,"line_end":679,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let half_carry = (self.registers.get_a() & 0xF) < (value & 0xF);","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":22037,"byte_end":22047,"line_start":679,"line_end":679,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let half_carry = (self.registers.get_a() & 0xF) < (value & 0xF);","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"_half_carry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `half_carry`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:679:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m679\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let half_carry = (self.registers.get_a() & 0xF) < (value & 0xF);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_half_carry`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":51130,"byte_end":51155,"line_start":1354,"line_end":1354,"column_start":7,"column_end":32,"is_primary":true,"text":[{"text":"      0x20 | 0x28 | 0x30 | 0x38 => { // JR cc, e8","highlight_start":7,"highlight_end":32}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":50439,"byte_end":50640,"line_start":1337,"line_end":1339,"column_start":7,"column_end":39,"is_primary":false,"text":[{"text":"      0x06 | 0x0E | 0x16 | 0x1E | 0x26 | 0x2E | 0x36 | 0x3E | // LD r, d8","highlight_start":7,"highlight_end":74},{"text":"      0xC6 | 0xCE | 0xD6 | 0xDE | 0xE6 | 0xEE | 0xF6 | 0xFE | // ALU operations with immediate","highlight_start":1,"highlight_end":95},{"text":"      0x18 | 0x20 | 0x28 | 0x30 | 0x38 => { // JR instructions","highlight_start":1,"highlight_end":39}],"label":"matches all the relevant values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1354:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0x06 | 0x0E | 0x16 | 0x1E | 0x26 | 0x2E | 0x36 | 0x3E | // LD r, d8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xC6 | 0xCE | 0xD6 | 0xDE | 0xE6 | 0xEE | 0xF6 | 0xFE | // ALU operations with immediate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0x18 | 0x20 | 0x28 | 0x30 | 0x38 => { // JR instructions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches all the relevant values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m      0x20 | 0x28 | 0x30 | 0x38 => { // JR cc, e8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":51420,"byte_end":51473,"line_start":1362,"line_end":1362,"column_start":7,"column_end":60,"is_primary":true,"text":[{"text":"      0xC2 | 0xC4 | 0xCA | 0xCC | 0xD2 | 0xD4 | 0xDA | 0xDC => { // JP/CALL cc, a16","highlight_start":7,"highlight_end":60}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":50776,"byte_end":50979,"line_start":1345,"line_end":1348,"column_start":7,"column_end":32,"is_primary":false,"text":[{"text":"      0x01 | 0x11 | 0x21 | 0x31 | // LD rr, d16","highlight_start":7,"highlight_end":48},{"text":"      0xC2 | 0xC3 | 0xC4 | 0xCA | 0xCC | 0xCD | // JP/CALL instructions","highlight_start":1,"highlight_end":72},{"text":"      0xD2 | 0xD4 | 0xDA | 0xDC | // JP/CALL instructions","highlight_start":1,"highlight_end":58},{"text":"      0xE2 | 0xEA | 0xF2 | 0xFA => { // LD instructions with 16-bit address","highlight_start":1,"highlight_end":32}],"label":"matches all the relevant values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1362:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0x01 | 0x11 | 0x21 | 0x31 | // LD rr, d16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xC2 | 0xC3 | 0xC4 | 0xCA | 0xCC | 0xCD | // JP/CALL instructions\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xD2 | 0xD4 | 0xDA | 0xDC | // JP/CALL instructions\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xE2 | 0xEA | 0xF2 | 0xFA => { // LD instructions with 16-bit address\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_______________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches all the relevant values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1362\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m      0xC2 | 0xC4 | 0xCA | 0xCC | 0xD2 | 0xD4 | 0xDA | 0xDC => { // JP/CALL cc, a16\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `cycles` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":50307,"byte_end":50313,"line_start":1333,"line_end":1333,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    let mut cycles = 4; // Base cycles for most instructions","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `cycles` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1333:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut cycles = 4; // Base cycles for most instructions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 12 previous errors; 45 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 12 previous errors; 45 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0432, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0432, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
