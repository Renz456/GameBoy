{"$message_type":"diagnostic","message":"variant `LCD_STAT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":292,"byte_end":300,"line_start":16,"line_end":16,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LCD_STAT = 0x02,","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":292,"byte_end":300,"line_start":16,"line_end":16,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LCD_STAT = 0x02,","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"LcdStat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LCD_STAT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:16:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LCD_STAT = 0x02,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LcdStat`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LCD_STAT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":406,"byte_end":414,"line_start":24,"line_end":24,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LCD_STAT = 0x48,","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":406,"byte_end":414,"line_start":24,"line_end":24,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LCD_STAT = 0x48,","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"LcdStat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LCD_STAT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:24:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LCD_STAT = 0x48,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LcdStat`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `ADD_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":732,"byte_end":739,"line_start":44,"line_end":44,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADD_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":732,"byte_end":739,"line_start":44,"line_end":44,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADD_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"AddImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ADD_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:44:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  ADD_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AddImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `ADC_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":747,"byte_end":754,"line_start":45,"line_end":45,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADC_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":747,"byte_end":754,"line_start":45,"line_end":45,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADC_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"AdcImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ADC_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:45:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  ADC_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AdcImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `SUB_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":762,"byte_end":769,"line_start":46,"line_end":46,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SUB_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":762,"byte_end":769,"line_start":46,"line_end":46,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SUB_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"SubImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SUB_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:46:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  SUB_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SubImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `SBC_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":777,"byte_end":784,"line_start":47,"line_end":47,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SBC_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":777,"byte_end":784,"line_start":47,"line_end":47,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SBC_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"SbcImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SBC_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:47:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  SBC_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SbcImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `AND_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":792,"byte_end":799,"line_start":48,"line_end":48,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  AND_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":792,"byte_end":799,"line_start":48,"line_end":48,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  AND_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"AndImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `AND_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:48:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  AND_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AndImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `OR_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":807,"byte_end":813,"line_start":49,"line_end":49,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  OR_IMM(u8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":807,"byte_end":813,"line_start":49,"line_end":49,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  OR_IMM(u8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"OrImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `OR_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:49:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  OR_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `OrImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `XOR_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":821,"byte_end":828,"line_start":50,"line_end":50,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  XOR_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":821,"byte_end":828,"line_start":50,"line_end":50,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  XOR_IMM(u8),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"XorImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `XOR_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:50:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  XOR_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `XorImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `CP_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":836,"byte_end":842,"line_start":51,"line_end":51,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  CP_IMM(u8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":836,"byte_end":842,"line_start":51,"line_end":51,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  CP_IMM(u8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"CpImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CP_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:51:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  CP_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CpImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `ADD_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":851,"byte_end":858,"line_start":53,"line_end":53,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADD_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":851,"byte_end":858,"line_start":53,"line_end":53,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADD_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"AddMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ADD_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:53:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  ADD_MEM,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AddMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `ADC_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":862,"byte_end":869,"line_start":54,"line_end":54,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADC_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":862,"byte_end":869,"line_start":54,"line_end":54,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  ADC_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"AdcMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ADC_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:54:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  ADC_MEM,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AdcMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `SUB_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":873,"byte_end":880,"line_start":55,"line_end":55,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SUB_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":873,"byte_end":880,"line_start":55,"line_end":55,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SUB_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"SubMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SUB_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:55:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  SUB_MEM,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SubMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `SBC_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":884,"byte_end":891,"line_start":56,"line_end":56,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SBC_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":884,"byte_end":891,"line_start":56,"line_end":56,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  SBC_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"SbcMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SBC_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:56:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  SBC_MEM,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SbcMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `AND_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":895,"byte_end":902,"line_start":57,"line_end":57,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  AND_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":895,"byte_end":902,"line_start":57,"line_end":57,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  AND_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"AndMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `AND_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:57:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  AND_MEM,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AndMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `OR_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":906,"byte_end":912,"line_start":58,"line_end":58,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  OR_MEM,","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":906,"byte_end":912,"line_start":58,"line_end":58,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  OR_MEM,","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"OrMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `OR_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:58:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  OR_MEM,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `OrMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `XOR_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":916,"byte_end":923,"line_start":59,"line_end":59,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  XOR_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":916,"byte_end":923,"line_start":59,"line_end":59,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  XOR_MEM,","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"XorMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `XOR_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:59:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  XOR_MEM,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `XorMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `CP_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":927,"byte_end":933,"line_start":60,"line_end":60,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  CP_MEM,","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":927,"byte_end":933,"line_start":60,"line_end":60,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  CP_MEM,","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"CpMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CP_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:60:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  CP_MEM,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CpMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `ADD_HL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":948,"byte_end":954,"line_start":64,"line_end":64,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  ADD_HL(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":948,"byte_end":954,"line_start":64,"line_end":64,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  ADD_HL(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"AddHl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ADD_HL` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:64:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  ADD_HL(ArithmeticTarget, ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AddHl`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `INC_16` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1061,"byte_end":1067,"line_start":70,"line_end":70,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  INC_16(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1061,"byte_end":1067,"line_start":70,"line_end":70,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  INC_16(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"Inc16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INC_16` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:70:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  INC_16(ArithmeticTarget, ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Inc16`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `DEC_16` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1107,"byte_end":1113,"line_start":71,"line_end":71,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  DEC_16(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1107,"byte_end":1113,"line_start":71,"line_end":71,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  DEC_16(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"Dec16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DEC_16` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:71:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  DEC_16(ArithmeticTarget, ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Dec16`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `RET_N` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1356,"byte_end":1361,"line_start":83,"line_end":83,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  RET_N(bool, bool),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1356,"byte_end":1361,"line_start":83,"line_end":83,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  RET_N(bool, bool),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":"RetN","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `RET_N` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:83:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  RET_N(bool, bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RetN`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `JP_HL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1476,"byte_end":1481,"line_start":88,"line_end":88,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  JP_HL(),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1476,"byte_end":1481,"line_start":88,"line_end":88,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  JP_HL(),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":"JpHl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `JP_HL` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:88:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  JP_HL(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `JpHl`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_RR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1515,"byte_end":1520,"line_start":91,"line_end":91,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  LD_RR(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1515,"byte_end":1520,"line_start":91,"line_end":91,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  LD_RR(ArithmeticTarget, ArithmeticTarget),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":"LdRr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_RR` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:91:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_RR(ArithmeticTarget, ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdRr`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_MEM_REG` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1560,"byte_end":1570,"line_start":92,"line_end":92,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_REG(ArithmeticTarget),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1560,"byte_end":1570,"line_start":92,"line_end":92,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_REG(ArithmeticTarget),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":"LdMemReg","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_MEM_REG` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:92:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_MEM_REG(ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdMemReg`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_REG_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1592,"byte_end":1602,"line_start":93,"line_end":93,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_REG_MEM(ArithmeticTarget),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1592,"byte_end":1602,"line_start":93,"line_end":93,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_REG_MEM(ArithmeticTarget),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":"LdRegMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_REG_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:93:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_REG_MEM(ArithmeticTarget),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdRegMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_MEM_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1624,"byte_end":1634,"line_start":94,"line_end":94,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_IMM(u8),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1624,"byte_end":1634,"line_start":94,"line_end":94,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_IMM(u8),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":"LdMemImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_MEM_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:94:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_MEM_IMM(u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdMemImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_REG_IMM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1642,"byte_end":1652,"line_start":95,"line_end":95,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_REG_IMM(ArithmeticTarget, u8),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1642,"byte_end":1652,"line_start":95,"line_end":95,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_REG_IMM(ArithmeticTarget, u8),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":"LdRegImm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_REG_IMM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:95:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_REG_IMM(ArithmeticTarget, u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdRegImm`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_MEM_INC` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1678,"byte_end":1688,"line_start":96,"line_end":96,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_INC(bool, bool),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1678,"byte_end":1688,"line_start":96,"line_end":96,"column_start":3,"column_end":13,"is_primary":true,"text":[{"text":"  LD_MEM_INC(bool, bool),","highlight_start":3,"highlight_end":13}],"label":null,"suggested_replacement":"LdMemInc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_MEM_INC` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:96:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_MEM_INC(bool, bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdMemInc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_BCDE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1704,"byte_end":1711,"line_start":97,"line_end":97,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  LD_BCDE(ArithmeticTarget, ArithmeticTarget, bool),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1704,"byte_end":1711,"line_start":97,"line_end":97,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  LD_BCDE(ArithmeticTarget, ArithmeticTarget, bool),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"LdBcde","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_BCDE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:97:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_BCDE(ArithmeticTarget, ArithmeticTarget, bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdBcde`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_IMM_16` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1757,"byte_end":1766,"line_start":98,"line_end":98,"column_start":3,"column_end":12,"is_primary":true,"text":[{"text":"  LD_IMM_16(u16, bool),","highlight_start":3,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1757,"byte_end":1766,"line_start":98,"line_end":98,"column_start":3,"column_end":12,"is_primary":true,"text":[{"text":"  LD_IMM_16(u16, bool),","highlight_start":3,"highlight_end":12}],"label":null,"suggested_replacement":"LdImm16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_IMM_16` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:98:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_IMM_16(u16, bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdImm16`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_IMM_8` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1781,"byte_end":1789,"line_start":99,"line_end":99,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LD_IMM_8(u8, bool),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1781,"byte_end":1789,"line_start":99,"line_end":99,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LD_IMM_8(u8, bool),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"LdImm8","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_IMM_8` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:99:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_IMM_8(u8, bool),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdImm8`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_AC` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1803,"byte_end":1808,"line_start":100,"line_end":100,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  LD_AC(bool),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1803,"byte_end":1808,"line_start":100,"line_end":100,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"  LD_AC(bool),","highlight_start":3,"highlight_end":8}],"label":null,"suggested_replacement":"LdAc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_AC` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:100:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_AC(bool),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdAc`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_REG_IMM_16` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1818,"byte_end":1831,"line_start":101,"line_end":101,"column_start":3,"column_end":16,"is_primary":true,"text":[{"text":"  LD_REG_IMM_16(ArithmeticTarget, ArithmeticTarget, u16),","highlight_start":3,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1818,"byte_end":1831,"line_start":101,"line_end":101,"column_start":3,"column_end":16,"is_primary":true,"text":[{"text":"  LD_REG_IMM_16(ArithmeticTarget, ArithmeticTarget, u16),","highlight_start":3,"highlight_end":16}],"label":null,"suggested_replacement":"LdRegImm16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_REG_IMM_16` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:101:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_REG_IMM_16(ArithmeticTarget, ArithmeticTarget, u16),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdRegImm16`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `MOD_MEM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1876,"byte_end":1883,"line_start":102,"line_end":102,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  MOD_MEM(bool),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1876,"byte_end":1883,"line_start":102,"line_end":102,"column_start":3,"column_end":10,"is_primary":true,"text":[{"text":"  MOD_MEM(bool),","highlight_start":3,"highlight_end":10}],"label":null,"suggested_replacement":"ModMem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MOD_MEM` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:102:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  MOD_MEM(bool),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ModMem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `STORE_SP` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1894,"byte_end":1902,"line_start":104,"line_end":104,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  STORE_SP(u16),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1894,"byte_end":1902,"line_start":104,"line_end":104,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  STORE_SP(u16),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"StoreSp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STORE_SP` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:104:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  STORE_SP(u16),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StoreSp`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `INC_SP` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1911,"byte_end":1917,"line_start":105,"line_end":105,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  INC_SP(i8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1911,"byte_end":1917,"line_start":105,"line_end":105,"column_start":3,"column_end":9,"is_primary":true,"text":[{"text":"  INC_SP(i8),","highlight_start":3,"highlight_end":9}],"label":null,"suggested_replacement":"IncSp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INC_SP` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:105:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  INC_SP(i8),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IncSp`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_SP_HL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1925,"byte_end":1933,"line_start":106,"line_end":106,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LD_SP_HL,","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1925,"byte_end":1933,"line_start":106,"line_end":106,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LD_SP_HL,","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"LdSpHl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_SP_HL` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:106:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_SP_HL,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdSpHl`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `LD_HL_SP` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1937,"byte_end":1945,"line_start":107,"line_end":107,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LD_HL_SP(i8),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1937,"byte_end":1945,"line_start":107,"line_end":107,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"  LD_HL_SP(i8),","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":"LdHlSp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LD_HL_SP` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:107:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  LD_HL_SP(i8),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LdHlSp`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around method argument","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25684,"byte_end":25685,"line_start":806,"line_end":806,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), false, false, true);","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25721,"byte_end":25722,"line_start":806,"line_end":806,"column_start":57,"column_end":58,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), false, false, true);","highlight_start":57,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25684,"byte_end":25685,"line_start":806,"line_end":806,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), false, false, true);","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25721,"byte_end":25722,"line_start":806,"line_end":806,"column_start":57,"column_end":58,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), false, false, true);","highlight_start":57,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around method argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:806:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m806\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), false, false, true);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m806\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    self.set_flags(\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mflags & (FlagMasks::ZERO as u8) != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m, false, false, true);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m806\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    self.set_flags(flags & (FlagMasks::ZERO as u8) != 0, false, false, true);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around method argument","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25831,"byte_end":25832,"line_start":811,"line_end":811,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), false, false, !(flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25868,"byte_end":25869,"line_start":811,"line_end":811,"column_start":57,"column_end":58,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), false, false, !(flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":57,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":25831,"byte_end":25832,"line_start":811,"line_end":811,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), false, false, !(flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25868,"byte_end":25869,"line_start":811,"line_end":811,"column_start":57,"column_end":58,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), false, false, !(flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":57,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around method argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:811:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m811\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), false, false, !(flags & (FlagMasks::CARRY as u8) != 0));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m811\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    self.set_flags(\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mflags & (FlagMasks::ZERO as u8) != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m, false, false, !(flags & (FlagMasks::CARRY as u8) != 0));\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m811\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    self.set_flags(flags & (FlagMasks::ZERO as u8) != 0, false, false, !(flags & (FlagMasks::CARRY as u8) != 0));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around method argument","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":26080,"byte_end":26081,"line_start":818,"line_end":818,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, (flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":26117,"byte_end":26118,"line_start":818,"line_end":818,"column_start":57,"column_end":58,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, (flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":57,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":26080,"byte_end":26081,"line_start":818,"line_end":818,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, (flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":26117,"byte_end":26118,"line_start":818,"line_end":818,"column_start":57,"column_end":58,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, (flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":57,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around method argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:818:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m818\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, (flags & (FlagMasks::CARRY as u8) != 0));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m818\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    self.set_flags(\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mflags & (FlagMasks::ZERO as u8) != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m, true, true, (flags & (FlagMasks::CARRY as u8) != 0));\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m818\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    self.set_flags(flags & (FlagMasks::ZERO as u8) != 0, true, true, (flags & (FlagMasks::CARRY as u8) != 0));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around method argument","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":26132,"byte_end":26133,"line_start":818,"line_end":818,"column_start":72,"column_end":73,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, (flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":72,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":26170,"byte_end":26171,"line_start":818,"line_end":818,"column_start":110,"column_end":111,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, (flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":110,"highlight_end":111}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/gb/cpu.rs","byte_start":26132,"byte_end":26133,"line_start":818,"line_end":818,"column_start":72,"column_end":73,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, (flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":72,"highlight_end":73}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":26170,"byte_end":26171,"line_start":818,"line_end":818,"column_start":110,"column_end":111,"is_primary":true,"text":[{"text":"    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, (flags & (FlagMasks::CARRY as u8) != 0));","highlight_start":110,"highlight_end":111}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around method argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:818:72\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m818\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, (flags & (FlagMasks::CARRY as u8) != 0));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m818\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mflags & (FlagMasks::CARRY as u8) != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m818\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    self.set_flags((flags & (FlagMasks::ZERO as u8) != 0), true, true, flags & (FlagMasks::CARRY as u8) != 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variant `HALF_CARRY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/register.rs","byte_start":886,"byte_end":896,"line_start":43,"line_end":43,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    HALF_CARRY = 0b00100000,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/gb/register.rs","byte_start":886,"byte_end":896,"line_start":43,"line_end":43,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    HALF_CARRY = 0b00100000,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"HalfCarry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `HALF_CARRY` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/register.rs:43:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    HALF_CARRY = 0b00100000,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `HalfCarry`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":6152,"byte_end":6153,"line_start":238,"line_end":238,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        _ => panic!(\"Invalid get method\"),","highlight_start":9,"highlight_end":10}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"multiple earlier patterns match some of the same values","code":null,"level":"note","spans":[{"file_name":"src/gb/cpu.rs","byte_start":5634,"byte_end":5653,"line_start":229,"line_end":229,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::A => self.registers.get_a(),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5689,"byte_end":5708,"line_start":230,"line_end":230,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::B => self.registers.get_b(),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5744,"byte_end":5763,"line_start":231,"line_end":231,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::C => self.registers.get_c(),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5799,"byte_end":5818,"line_start":232,"line_end":232,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::D => self.registers.get_d(),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":6152,"byte_end":6153,"line_start":238,"line_end":238,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        _ => panic!(\"Invalid get method\"),","highlight_start":9,"highlight_end":10}],"label":"...and 5 other patterns collectively make this unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`#[warn(unreachable_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:238:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => panic!(\"Invalid get method\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: multiple earlier patterns match some of the same values\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:238:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::A => self.registers.get_a(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::B => self.registers.get_b(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::C => self.registers.get_c(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::D => self.registers.get_d(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => panic!(\"Invalid get method\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m...and 5 other patterns collectively make this unreachable\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_patterns)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":6790,"byte_end":6791,"line_start":251,"line_end":251,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        _ => panic!(\"Invalid set method\"),","highlight_start":9,"highlight_end":10}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"multiple earlier patterns match some of the same values","code":null,"level":"note","spans":[{"file_name":"src/gb/cpu.rs","byte_start":6227,"byte_end":6246,"line_start":242,"line_end":242,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::A => self.registers.set_a(value),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":6287,"byte_end":6306,"line_start":243,"line_end":243,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::B => self.registers.set_b(value),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":6347,"byte_end":6366,"line_start":244,"line_end":244,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::C => self.registers.set_c(value),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":6407,"byte_end":6426,"line_start":245,"line_end":245,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        ArithmeticTarget::D => self.registers.set_d(value),","highlight_start":9,"highlight_end":28}],"label":"matches some of the same values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":6790,"byte_end":6791,"line_start":251,"line_end":251,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        _ => panic!(\"Invalid set method\"),","highlight_start":9,"highlight_end":10}],"label":"...and 5 other patterns collectively make this unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:251:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => panic!(\"Invalid set method\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: multiple earlier patterns match some of the same values\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:251:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::A => self.registers.set_a(value),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::B => self.registers.set_b(value),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::C => self.registers.set_c(value),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ArithmeticTarget::D => self.registers.set_d(value),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches some of the same values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => panic!(\"Invalid set method\"),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m...and 5 other patterns collectively make this unreachable\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `value` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":21565,"byte_end":21570,"line_start":672,"line_end":672,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let value: u16; ","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_value` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `value` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:672:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m672\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let value: u16; \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_value` instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `value` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":21671,"byte_end":21676,"line_start":675,"line_end":675,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        value = self.registers.get_bc();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `value` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:675:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m675\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        value = self.registers.get_bc();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `value` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":21834,"byte_end":21839,"line_start":679,"line_end":679,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        value = self.registers.get_de();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `value` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:679:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m679\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        value = self.registers.get_de();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `value` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":21997,"byte_end":22002,"line_start":683,"line_end":683,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        value = self.registers.get_hl();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `value` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:683:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m683\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        value = self.registers.get_hl();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":52500,"byte_end":52525,"line_start":1414,"line_end":1414,"column_start":7,"column_end":32,"is_primary":true,"text":[{"text":"      0x20 | 0x28 | 0x30 | 0x38 => { // JR cc, e8","highlight_start":7,"highlight_end":32}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":51809,"byte_end":52010,"line_start":1397,"line_end":1399,"column_start":7,"column_end":39,"is_primary":false,"text":[{"text":"      0x06 | 0x0E | 0x16 | 0x1E | 0x26 | 0x2E | 0x36 | 0x3E | // LD r, d8","highlight_start":7,"highlight_end":74},{"text":"      0xC6 | 0xCE | 0xD6 | 0xDE | 0xE6 | 0xEE | 0xF6 | 0xFE | // ALU operations with immediate","highlight_start":1,"highlight_end":95},{"text":"      0x18 | 0x20 | 0x28 | 0x30 | 0x38 => { // JR instructions","highlight_start":1,"highlight_end":39}],"label":"matches all the relevant values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1414:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1397\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0x06 | 0x0E | 0x16 | 0x1E | 0x26 | 0x2E | 0x36 | 0x3E | // LD r, d8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1398\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xC6 | 0xCE | 0xD6 | 0xDE | 0xE6 | 0xEE | 0xF6 | 0xFE | // ALU operations with immediate\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0x18 | 0x20 | 0x28 | 0x30 | 0x38 => { // JR instructions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches all the relevant values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m      0x20 | 0x28 | 0x30 | 0x38 => { // JR cc, e8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":52790,"byte_end":52843,"line_start":1422,"line_end":1422,"column_start":7,"column_end":60,"is_primary":true,"text":[{"text":"      0xC2 | 0xC4 | 0xCA | 0xCC | 0xD2 | 0xD4 | 0xDA | 0xDC => { // JP/CALL cc, a16","highlight_start":7,"highlight_end":60}],"label":"no value can reach this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":52146,"byte_end":52349,"line_start":1405,"line_end":1408,"column_start":7,"column_end":32,"is_primary":false,"text":[{"text":"      0x01 | 0x11 | 0x21 | 0x31 | // LD rr, d16","highlight_start":7,"highlight_end":48},{"text":"      0xC2 | 0xC3 | 0xC4 | 0xCA | 0xCC | 0xCD | // JP/CALL instructions","highlight_start":1,"highlight_end":72},{"text":"      0xD2 | 0xD4 | 0xDA | 0xDC | // JP/CALL instructions","highlight_start":1,"highlight_end":58},{"text":"      0xE2 | 0xEA | 0xF2 | 0xFA => { // LD instructions with 16-bit address","highlight_start":1,"highlight_end":32}],"label":"matches all the relevant values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1422:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1405\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0x01 | 0x11 | 0x21 | 0x31 | // LD rr, d16\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1406\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xC2 | 0xC3 | 0xC4 | 0xCA | 0xCC | 0xCD | // JP/CALL instructions\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xD2 | 0xD4 | 0xDA | 0xDC | // JP/CALL instructions\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      0xE2 | 0xEA | 0xF2 | 0xFA => { // LD instructions with 16-bit address\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_______________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches all the relevant values\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1422\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m      0xC2 | 0xC4 | 0xCA | 0xCC | 0xD2 | 0xD4 | 0xDA | 0xDC => { // JP/CALL cc, a16\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mno value can reach this\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `cycles` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":51677,"byte_end":51683,"line_start":1393,"line_end":1393,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    let mut cycles = 4; // Base cycles for most instructions","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `cycles` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:1393:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut cycles = 4; // Base cycles for most instructions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `Code` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":141,"byte_end":145,"line_start":6,"line_end":6,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"pub struct Code {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `Code` is never constructed\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:6:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Code {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum `Interrupt` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":261,"byte_end":270,"line_start":14,"line_end":14,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"enum Interrupt {","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: enum `Interrupt` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:14:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Interrupt {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum `InterruptHandlers` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":367,"byte_end":384,"line_start":22,"line_end":22,"column_start":6,"column_end":23,"is_primary":true,"text":[{"text":"enum InterruptHandlers {","highlight_start":6,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: enum `InterruptHandlers` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:22:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum InterruptHandlers {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum `Instruction` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":486,"byte_end":497,"line_start":31,"line_end":31,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub enum Instruction {","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: enum `Instruction` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:31:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Instruction {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum `ArithmeticTarget` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":1989,"byte_end":2005,"line_start":116,"line_end":116,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub enum ArithmeticTarget {","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: enum `ArithmeticTarget` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:116:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum ArithmeticTarget {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `INTERRUPT_ENABLE_ADDRESS` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":2046,"byte_end":2070,"line_start":120,"line_end":120,"column_start":7,"column_end":31,"is_primary":true,"text":[{"text":"const INTERRUPT_ENABLE_ADDRESS: u16 = 0xFFFF;","highlight_start":7,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `INTERRUPT_ENABLE_ADDRESS` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:120:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst INTERRUPT_ENABLE_ADDRESS: u16 = 0xFFFF;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `INTERRUPT_FLAG_ADDRESS` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":2092,"byte_end":2114,"line_start":121,"line_end":121,"column_start":7,"column_end":29,"is_primary":true,"text":[{"text":"const INTERRUPT_FLAG_ADDRESS: u16 = 0xFF0F;","highlight_start":7,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `INTERRUPT_FLAG_ADDRESS` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:121:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst INTERRUPT_FLAG_ADDRESS: u16 = 0xFF0F;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `CPU` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":2142,"byte_end":2145,"line_start":123,"line_end":123,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"pub struct CPU<'a> {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `CPU` is never constructed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:123:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct CPU<'a> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"multiple associated items are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":4645,"byte_end":4661,"line_start":189,"line_end":189,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"impl<'a> CPU<'a> {","highlight_start":1,"highlight_end":17}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":4673,"byte_end":4676,"line_start":190,"line_end":190,"column_start":10,"column_end":13,"is_primary":true,"text":[{"text":"  pub fn new(ram: &'a mut RAM) -> Self {","highlight_start":10,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":4940,"byte_end":4942,"line_start":203,"line_end":203,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"  fn ei(&mut self) {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5007,"byte_end":5009,"line_start":207,"line_end":207,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"  fn di(&mut self) {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5075,"byte_end":5084,"line_start":211,"line_end":211,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"  fn set_flags(&mut self, zero: bool, subtract: bool, half_carry: bool, carry: bool) {","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5431,"byte_end":5440,"line_start":222,"line_end":222,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"  fn get_flags(&self) -> Flags {","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":5512,"byte_end":5517,"line_start":226,"line_end":226,"column_start":6,"column_end":11,"is_primary":true,"text":[{"text":"  fn ld_rr(&mut self, destination: ArithmeticTarget, source: ArithmeticTarget) {","highlight_start":6,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":6842,"byte_end":6852,"line_start":255,"line_end":255,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"  fn ld_reg_mem(&mut self, target: ArithmeticTarget) {","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":7467,"byte_end":7477,"line_start":270,"line_end":270,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"  fn ld_mem_imm(&mut self, value: u8) {","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":7591,"byte_end":7601,"line_start":275,"line_end":275,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"  fn ld_reg_imm(&mut self, target: ArithmeticTarget, value: u8) {","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":8146,"byte_end":8156,"line_start":288,"line_end":288,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"  fn ld_mem_inc(&mut self, increment: bool, load: bool) {","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":8576,"byte_end":8583,"line_start":304,"line_end":304,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"  fn mod_mem(&mut self, increment: bool) {","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":9079,"byte_end":9086,"line_start":321,"line_end":321,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"  fn ld_bcde(&mut self, target1: ArithmeticTarget, target2: ArithmeticTarget, load: bool) {","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":9564,"byte_end":9573,"line_start":335,"line_end":335,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"  fn ld_imm_16(&mut self, address: u16, load: bool) {","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":9788,"byte_end":9796,"line_start":344,"line_end":344,"column_start":6,"column_end":14,"is_primary":true,"text":[{"text":"  fn ld_imm_8(&mut self, value: u8, load: bool) {","highlight_start":6,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":10024,"byte_end":10029,"line_start":353,"line_end":353,"column_start":6,"column_end":11,"is_primary":true,"text":[{"text":"  fn ld_ac(&mut self, load: bool) {","highlight_start":6,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":10263,"byte_end":10276,"line_start":362,"line_end":362,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"  fn ld_reg_imm_16(&mut self, target1: ArithmeticTarget, target2: ArithmeticTarget, value: u16) {","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":10784,"byte_end":10792,"line_start":372,"line_end":372,"column_start":6,"column_end":14,"is_primary":true,"text":[{"text":"  fn store_sp(&mut self, address: u16) {","highlight_start":6,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":10966,"byte_end":10972,"line_start":378,"line_end":378,"column_start":6,"column_end":12,"is_primary":true,"text":[{"text":"  fn inc_sp(&mut self, value: i8) {","highlight_start":6,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":11265,"byte_end":11273,"line_start":385,"line_end":385,"column_start":6,"column_end":14,"is_primary":true,"text":[{"text":"  fn ld_sp_hl(&mut self) {","highlight_start":6,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":11349,"byte_end":11357,"line_start":389,"line_end":389,"column_start":6,"column_end":14,"is_primary":true,"text":[{"text":"  fn ld_hl_sp(&mut self, value: i8) {","highlight_start":6,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":11650,"byte_end":11653,"line_start":396,"line_end":396,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn ret(&mut self, carry: bool, zero: bool, interrupt: bool) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":12481,"byte_end":12486,"line_start":417,"line_end":417,"column_start":6,"column_end":11,"is_primary":true,"text":[{"text":"  fn ret_n(&mut self, carry: bool, zero: bool) {","highlight_start":6,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":12947,"byte_end":12950,"line_start":430,"line_end":430,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn rst(&mut self, value: u8) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":13187,"byte_end":13191,"line_start":438,"line_end":438,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"  fn call(&mut self, address: u16, carry: bool, zero: bool, negative: bool) {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":14015,"byte_end":14017,"line_start":456,"line_end":456,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"  fn jr(&mut self, carry: bool, zero: bool, negative: bool, jump_value: i8) {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":14883,"byte_end":14885,"line_start":477,"line_end":477,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"  fn jp(&mut self, carry: bool, zero: bool, negative: bool, jump_value: u16) {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":15458,"byte_end":15463,"line_start":490,"line_end":490,"column_start":6,"column_end":11,"is_primary":true,"text":[{"text":"  fn jp_hl(&mut self) {","highlight_start":6,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":15539,"byte_end":15542,"line_start":494,"line_end":494,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn pop(&mut self, target: ArithmeticTarget, target2: ArithmeticTarget) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":16207,"byte_end":16211,"line_start":516,"line_end":516,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"  fn push(&mut self, target: ArithmeticTarget, target2: ArithmeticTarget) {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":16884,"byte_end":16890,"line_start":538,"line_end":538,"column_start":6,"column_end":12,"is_primary":true,"text":[{"text":"  fn add_hl(&mut self, target1: ArithmeticTarget, target2: ArithmeticTarget) {","highlight_start":6,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":17644,"byte_end":17647,"line_start":555,"line_end":555,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn inc(&mut self, target: ArithmeticTarget) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":19222,"byte_end":19225,"line_start":603,"line_end":603,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn dec(&mut self, target: ArithmeticTarget) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":20800,"byte_end":20806,"line_start":651,"line_end":651,"column_start":6,"column_end":12,"is_primary":true,"text":[{"text":"  fn inc_16(&mut self, target1: ArithmeticTarget, target2: ArithmeticTarget) {","highlight_start":6,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":21483,"byte_end":21489,"line_start":671,"line_end":671,"column_start":6,"column_end":12,"is_primary":true,"text":[{"text":"  fn dec_16(&mut self, target1: ArithmeticTarget, target2: ArithmeticTarget) {","highlight_start":6,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":22310,"byte_end":22313,"line_start":695,"line_end":695,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn nop(&mut self) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":22372,"byte_end":22375,"line_start":699,"line_end":699,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn add(&mut self, value: u8) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":22668,"byte_end":22671,"line_start":707,"line_end":707,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn sub(&mut self, value: u8) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":22961,"byte_end":22964,"line_start":715,"line_end":715,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn and(&mut self, value: u8) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":23147,"byte_end":23149,"line_start":721,"line_end":721,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"  fn or(&mut self, value: u8) {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":23333,"byte_end":23336,"line_start":727,"line_end":727,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn xor(&mut self, value: u8) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":23522,"byte_end":23524,"line_start":733,"line_end":733,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"  fn cp(&mut self, value: u8) {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":23812,"byte_end":23814,"line_start":741,"line_end":741,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"  fn rl(&mut self, carry: bool) {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":24222,"byte_end":24224,"line_start":755,"line_end":755,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"  fn rr(&mut self, carry: bool) {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":24632,"byte_end":24635,"line_start":769,"line_end":769,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn daa(&mut self) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25608,"byte_end":25611,"line_start":804,"line_end":804,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn scf(&mut self) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25755,"byte_end":25758,"line_start":809,"line_end":809,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn ccf(&mut self) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":25938,"byte_end":25941,"line_start":814,"line_end":814,"column_start":6,"column_end":9,"is_primary":true,"text":[{"text":"  fn cpl(&mut self) {","highlight_start":6,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":26188,"byte_end":26195,"line_start":821,"line_end":821,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"  pub fn execute(&mut self, instruction: Instruction) {","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":31834,"byte_end":31852,"line_start":1078,"line_end":1078,"column_start":6,"column_end":24,"is_primary":true,"text":[{"text":"  fn decode_instruction(&self, opcode: u8) -> Instruction {","highlight_start":6,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":50746,"byte_end":50750,"line_start":1365,"line_end":1365,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"  pub fn step(&mut self) -> u8 {","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":51548,"byte_end":51568,"line_start":1390,"line_end":1390,"column_start":6,"column_end":26,"is_primary":true,"text":[{"text":"  fn get_instruction_info(&self, opcode: u8) -> (u8, u8) {","highlight_start":6,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":53686,"byte_end":53706,"line_start":1466,"line_end":1466,"column_start":6,"column_end":26,"is_primary":true,"text":[{"text":"  fn get_interrupt_vector(&self, interrupt_flag: u8) -> Interrupt {","highlight_start":6,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":54064,"byte_end":54085,"line_start":1480,"line_end":1480,"column_start":6,"column_end":27,"is_primary":true,"text":[{"text":"  fn get_interrupt_handler(&self, interrupt_vector: &Interrupt) -> InterruptHandlers {","highlight_start":6,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/cpu.rs","byte_start":54467,"byte_end":54484,"line_start":1490,"line_end":1490,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"  pub fn handle_interrupts(&mut self) {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: multiple associated items are never used\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:190:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'a> CPU<'a> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub fn new(ram: &'a mut RAM) -> Self {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ei(&mut self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn di(&mut self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn set_flags(&mut self, zero: bool, subtract: bool, half_carry: bool, carry: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn get_flags(&self) -> Flags {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_rr(&mut self, destination: ArithmeticTarget, source: ArithmeticTarget) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_reg_mem(&mut self, target: ArithmeticTarget) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_mem_imm(&mut self, value: u8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_reg_imm(&mut self, target: ArithmeticTarget, value: u8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_mem_inc(&mut self, increment: bool, load: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn mod_mem(&mut self, increment: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_bcde(&mut self, target1: ArithmeticTarget, target2: ArithmeticTarget, load: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_imm_16(&mut self, address: u16, load: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m344\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_imm_8(&mut self, value: u8, load: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_ac(&mut self, load: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m362\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_reg_imm_16(&mut self, target1: ArithmeticTarget, target2: ArithmeticTarget, value: u16) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn store_sp(&mut self, address: u16) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m378\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn inc_sp(&mut self, value: i8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m385\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_sp_hl(&mut self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m389\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ld_hl_sp(&mut self, value: i8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m396\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ret(&mut self, carry: bool, zero: bool, interrupt: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ret_n(&mut self, carry: bool, zero: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m430\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn rst(&mut self, value: u8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m438\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn call(&mut self, address: u16, carry: bool, zero: bool, negative: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m456\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn jr(&mut self, carry: bool, zero: bool, negative: bool, jump_value: i8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m477\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn jp(&mut self, carry: bool, zero: bool, negative: bool, jump_value: u16) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m490\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn jp_hl(&mut self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m494\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn pop(&mut self, target: ArithmeticTarget, target2: ArithmeticTarget) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m516\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn push(&mut self, target: ArithmeticTarget, target2: ArithmeticTarget) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m538\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn add_hl(&mut self, target1: ArithmeticTarget, target2: ArithmeticTarget) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn inc(&mut self, target: ArithmeticTarget) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m603\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn dec(&mut self, target: ArithmeticTarget) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m651\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn inc_16(&mut self, target1: ArithmeticTarget, target2: ArithmeticTarget) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m671\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn dec_16(&mut self, target1: ArithmeticTarget, target2: ArithmeticTarget) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m695\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn nop(&mut self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m699\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn add(&mut self, value: u8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m707\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn sub(&mut self, value: u8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m715\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn and(&mut self, value: u8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m721\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn or(&mut self, value: u8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m727\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn xor(&mut self, value: u8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m733\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn cp(&mut self, value: u8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m741\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn rl(&mut self, carry: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m755\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn rr(&mut self, carry: bool) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m769\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn daa(&mut self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m804\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn scf(&mut self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m809\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn ccf(&mut self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m814\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn cpl(&mut self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m821\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub fn execute(&mut self, instruction: Instruction) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1078\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn decode_instruction(&self, opcode: u8) -> Instruction {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub fn step(&mut self) -> u8 {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1390\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn get_instruction_info(&self, opcode: u8) -> (u8, u8) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1466\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn get_interrupt_vector(&self, interrupt_flag: u8) -> Interrupt {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1480\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  fn get_interrupt_handler(&self, interrupt_vector: &Interrupt) -> InterruptHandlers {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1490\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub fn handle_interrupts(&mut self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `INTERRUPT_ENABLE_ADDRESS` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/ram.rs","byte_start":10,"byte_end":34,"line_start":1,"line_end":1,"column_start":11,"column_end":35,"is_primary":true,"text":[{"text":"pub const INTERRUPT_ENABLE_ADDRESS: u16 = 0xFFFF;","highlight_start":11,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `INTERRUPT_ENABLE_ADDRESS` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/ram.rs:1:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const INTERRUPT_ENABLE_ADDRESS: u16 = 0xFFFF;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `INTERRUPT_FLAGS_ADDRESS` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/ram.rs","byte_start":60,"byte_end":83,"line_start":2,"line_end":2,"column_start":11,"column_end":34,"is_primary":true,"text":[{"text":"pub const INTERRUPT_FLAGS_ADDRESS: u16 = 0xFF0F;","highlight_start":11,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `INTERRUPT_FLAGS_ADDRESS` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/ram.rs:2:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const INTERRUPT_FLAGS_ADDRESS: u16 = 0xFF0F;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `RAM` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/ram.rs","byte_start":685,"byte_end":688,"line_start":26,"line_end":26,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"pub struct RAM {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `RAM` is never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/ram.rs:26:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RAM {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"associated items `new`, `read`, and `write` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/ram.rs","byte_start":752,"byte_end":760,"line_start":30,"line_end":30,"column_start":1,"column_end":9,"is_primary":false,"text":[{"text":"impl RAM {","highlight_start":1,"highlight_end":9}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/ram.rs","byte_start":774,"byte_end":777,"line_start":31,"line_end":31,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/ram.rs","byte_start":865,"byte_end":869,"line_start":37,"line_end":37,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn read(&self, address: u16) -> u8 {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/ram.rs","byte_start":955,"byte_end":960,"line_start":41,"line_end":41,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn write(&mut self, address: u16, value: u8) {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated items `new`, `read`, and `write` are never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/ram.rs:31:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl RAM {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn read(&self, address: u16) -> u8 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn write(&mut self, address: u16, value: u8) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `Registers` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/register.rs","byte_start":652,"byte_end":661,"line_start":26,"line_end":26,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"pub struct Registers {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `Registers` is never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/register.rs:26:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Registers {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum `FlagMasks` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/register.rs","byte_start":820,"byte_end":829,"line_start":40,"line_end":40,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub enum FlagMasks {","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`FlagMasks` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: enum `FlagMasks` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/register.rs:40:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum FlagMasks {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `FlagMasks` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `Flags` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/register.rs","byte_start":957,"byte_end":962,"line_start":49,"line_end":49,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"pub struct Flags {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `Flags` is never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/register.rs:49:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Flags {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"associated items `new`, `to_u8`, and `from_u8` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/register.rs","byte_start":1059,"byte_end":1069,"line_start":56,"line_end":56,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"impl Flags {","highlight_start":1,"highlight_end":11}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/register.rs","byte_start":1083,"byte_end":1086,"line_start":57,"line_end":57,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/register.rs","byte_start":1254,"byte_end":1259,"line_start":66,"line_end":66,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn to_u8(&self) -> u8 {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/register.rs","byte_start":1670,"byte_end":1677,"line_start":73,"line_end":73,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn from_u8(value: u8) -> Flags {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated items `new`, `to_u8`, and `from_u8` are never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/register.rs:57:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Flags {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn to_u8(&self) -> u8 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn from_u8(value: u8) -> Flags {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"multiple associated items are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/register.rs","byte_start":1981,"byte_end":1995,"line_start":83,"line_end":83,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"impl Registers {","highlight_start":1,"highlight_end":15}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/register.rs","byte_start":2009,"byte_end":2012,"line_start":84,"line_end":84,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/register.rs","byte_start":2260,"byte_end":2265,"line_start":99,"line_end":99,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    get_set!(a, get_a, set_a, u8);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2248,"byte_end":2277,"line_start":99,"line_end":99,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(a, get_a, set_a, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2267,"byte_end":2272,"line_start":99,"line_end":99,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"    get_set!(a, get_a, set_a, u8);","highlight_start":24,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2248,"byte_end":2277,"line_start":99,"line_end":99,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(a, get_a, set_a, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2295,"byte_end":2300,"line_start":100,"line_end":100,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    get_set!(b, get_b, set_b, u8);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2283,"byte_end":2312,"line_start":100,"line_end":100,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(b, get_b, set_b, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2302,"byte_end":2307,"line_start":100,"line_end":100,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"    get_set!(b, get_b, set_b, u8);","highlight_start":24,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2283,"byte_end":2312,"line_start":100,"line_end":100,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(b, get_b, set_b, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2330,"byte_end":2335,"line_start":101,"line_end":101,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    get_set!(c, get_c, set_c, u8);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2318,"byte_end":2347,"line_start":101,"line_end":101,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(c, get_c, set_c, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2337,"byte_end":2342,"line_start":101,"line_end":101,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"    get_set!(c, get_c, set_c, u8);","highlight_start":24,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2318,"byte_end":2347,"line_start":101,"line_end":101,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(c, get_c, set_c, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2365,"byte_end":2370,"line_start":102,"line_end":102,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    get_set!(d, get_d, set_d, u8);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2353,"byte_end":2382,"line_start":102,"line_end":102,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(d, get_d, set_d, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2372,"byte_end":2377,"line_start":102,"line_end":102,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"    get_set!(d, get_d, set_d, u8);","highlight_start":24,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2353,"byte_end":2382,"line_start":102,"line_end":102,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(d, get_d, set_d, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2400,"byte_end":2405,"line_start":103,"line_end":103,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    get_set!(e, get_e, set_e, u8);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2388,"byte_end":2417,"line_start":103,"line_end":103,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(e, get_e, set_e, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2407,"byte_end":2412,"line_start":103,"line_end":103,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"    get_set!(e, get_e, set_e, u8);","highlight_start":24,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2388,"byte_end":2417,"line_start":103,"line_end":103,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(e, get_e, set_e, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2473,"byte_end":2478,"line_start":105,"line_end":105,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    get_set!(h, get_h, set_h, u8);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2461,"byte_end":2490,"line_start":105,"line_end":105,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(h, get_h, set_h, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2480,"byte_end":2485,"line_start":105,"line_end":105,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"    get_set!(h, get_h, set_h, u8);","highlight_start":24,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2461,"byte_end":2490,"line_start":105,"line_end":105,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(h, get_h, set_h, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2508,"byte_end":2513,"line_start":106,"line_end":106,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"    get_set!(l, get_l, set_l, u8);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2496,"byte_end":2525,"line_start":106,"line_end":106,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(l, get_l, set_l, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2515,"byte_end":2520,"line_start":106,"line_end":106,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"    get_set!(l, get_l, set_l, u8);","highlight_start":24,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2496,"byte_end":2525,"line_start":106,"line_end":106,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    get_set!(l, get_l, set_l, u8);","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2549,"byte_end":2555,"line_start":108,"line_end":108,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"    get_set!(sp, get_sp, set_sp, u16);","highlight_start":18,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2536,"byte_end":2569,"line_start":108,"line_end":108,"column_start":5,"column_end":38,"is_primary":false,"text":[{"text":"    get_set!(sp, get_sp, set_sp, u16);","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2557,"byte_end":2563,"line_start":108,"line_end":108,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"    get_set!(sp, get_sp, set_sp, u16);","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2536,"byte_end":2569,"line_start":108,"line_end":108,"column_start":5,"column_end":38,"is_primary":false,"text":[{"text":"    get_set!(sp, get_sp, set_sp, u16);","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2588,"byte_end":2594,"line_start":109,"line_end":109,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"    get_set!(pc, get_pc, set_pc, u16);","highlight_start":18,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2575,"byte_end":2608,"line_start":109,"line_end":109,"column_start":5,"column_end":38,"is_primary":false,"text":[{"text":"    get_set!(pc, get_pc, set_pc, u16);","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2596,"byte_end":2602,"line_start":109,"line_end":109,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"    get_set!(pc, get_pc, set_pc, u16);","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2575,"byte_end":2608,"line_start":109,"line_end":109,"column_start":5,"column_end":38,"is_primary":false,"text":[{"text":"    get_set!(pc, get_pc, set_pc, u16);","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! get_set {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2671,"byte_end":2677,"line_start":114,"line_end":114,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    get_set_u16!(a, f, get_af, set_af);","highlight_start":24,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2652,"byte_end":2686,"line_start":114,"line_end":114,"column_start":5,"column_end":39,"is_primary":false,"text":[{"text":"    get_set_u16!(a, f, get_af, set_af);","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set_u16!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":264,"byte_end":288,"line_start":13,"line_end":13,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! get_set_u16 {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2679,"byte_end":2685,"line_start":114,"line_end":114,"column_start":32,"column_end":38,"is_primary":true,"text":[{"text":"    get_set_u16!(a, f, get_af, set_af);","highlight_start":32,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2652,"byte_end":2686,"line_start":114,"line_end":114,"column_start":5,"column_end":39,"is_primary":false,"text":[{"text":"    get_set_u16!(a, f, get_af, set_af);","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set_u16!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":264,"byte_end":288,"line_start":13,"line_end":13,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! get_set_u16 {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2711,"byte_end":2717,"line_start":115,"line_end":115,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    get_set_u16!(b, c, get_bc, set_bc);","highlight_start":24,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2692,"byte_end":2726,"line_start":115,"line_end":115,"column_start":5,"column_end":39,"is_primary":false,"text":[{"text":"    get_set_u16!(b, c, get_bc, set_bc);","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set_u16!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":264,"byte_end":288,"line_start":13,"line_end":13,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! get_set_u16 {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2719,"byte_end":2725,"line_start":115,"line_end":115,"column_start":32,"column_end":38,"is_primary":true,"text":[{"text":"    get_set_u16!(b, c, get_bc, set_bc);","highlight_start":32,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2692,"byte_end":2726,"line_start":115,"line_end":115,"column_start":5,"column_end":39,"is_primary":false,"text":[{"text":"    get_set_u16!(b, c, get_bc, set_bc);","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set_u16!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":264,"byte_end":288,"line_start":13,"line_end":13,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! get_set_u16 {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2751,"byte_end":2757,"line_start":116,"line_end":116,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    get_set_u16!(d, e, get_de, set_de);","highlight_start":24,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2732,"byte_end":2766,"line_start":116,"line_end":116,"column_start":5,"column_end":39,"is_primary":false,"text":[{"text":"    get_set_u16!(d, e, get_de, set_de);","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set_u16!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":264,"byte_end":288,"line_start":13,"line_end":13,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! get_set_u16 {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2759,"byte_end":2765,"line_start":116,"line_end":116,"column_start":32,"column_end":38,"is_primary":true,"text":[{"text":"    get_set_u16!(d, e, get_de, set_de);","highlight_start":32,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2732,"byte_end":2766,"line_start":116,"line_end":116,"column_start":5,"column_end":39,"is_primary":false,"text":[{"text":"    get_set_u16!(d, e, get_de, set_de);","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set_u16!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":264,"byte_end":288,"line_start":13,"line_end":13,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! get_set_u16 {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2791,"byte_end":2797,"line_start":117,"line_end":117,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    get_set_u16!(h, l, get_hl, set_hl); ","highlight_start":24,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2772,"byte_end":2806,"line_start":117,"line_end":117,"column_start":5,"column_end":39,"is_primary":false,"text":[{"text":"    get_set_u16!(h, l, get_hl, set_hl); ","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set_u16!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":264,"byte_end":288,"line_start":13,"line_end":13,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! get_set_u16 {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2799,"byte_end":2805,"line_start":117,"line_end":117,"column_start":32,"column_end":38,"is_primary":true,"text":[{"text":"    get_set_u16!(h, l, get_hl, set_hl); ","highlight_start":32,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/gb/register.rs","byte_start":2772,"byte_end":2806,"line_start":117,"line_end":117,"column_start":5,"column_end":39,"is_primary":false,"text":[{"text":"    get_set_u16!(h, l, get_hl, set_hl); ","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_set_u16!","def_site_span":{"file_name":"src/gb/register.rs","byte_start":264,"byte_end":288,"line_start":13,"line_end":13,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! get_set_u16 {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/gb/register.rs","byte_start":2821,"byte_end":2826,"line_start":119,"line_end":119,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn get_f(&self) -> u8 {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/register.rs","byte_start":2875,"byte_end":2880,"line_start":123,"line_end":123,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn set_f(&mut self, value: u8) {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/register.rs","byte_start":3072,"byte_end":3092,"line_start":129,"line_end":129,"column_start":12,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn get_and_increment_pc(&mut self) -> u16 {","highlight_start":12,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/gb/register.rs","byte_start":3194,"byte_end":3206,"line_start":135,"line_end":135,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn increment_pc(&mut self) -> u16 {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: multiple associated items are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/register.rs:84:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Registers {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set!(a, get_a, set_a, u8);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set!(b, get_b, set_b, u8);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set!(c, get_c, set_c, u8);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set!(d, get_d, set_d, u8);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set!(e, get_e, set_e, u8);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // get_set!(f, get_f, set_f, u8);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set!(h, get_h, set_h, u8);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set!(l, get_l, set_l, u8);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set!(sp, get_sp, set_sp, u16);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set!(pc, get_pc, set_pc, u16);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set_u16!(a, f, get_af, set_af);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set_u16!(b, c, get_bc, set_bc);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set_u16!(d, e, get_de, set_de);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_set_u16!(h, l, get_hl, set_hl); \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_f(&self) -> u8 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_f(&mut self, value: u8) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_and_increment_pc(&mut self) -> u16 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn increment_pc(&mut self) -> u16 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `get_set` which comes from the expansion of the macro `get_set_u16` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"comparison is useless due to type limits","code":{"code":"unused_comparisons","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":12987,"byte_end":13000,"line_start":431,"line_end":431,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"    assert!(0x00 <= value && value <= 0x7);","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_comparisons)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: comparison is useless due to type limits\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:431:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m431\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    assert!(0x00 <= value && value <= 0x7);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_comparisons)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"comparison is useless due to type limits","code":{"code":"unused_comparisons","explanation":null},"level":"warning","spans":[{"file_name":"src/gb/cpu.rs","byte_start":20606,"byte_end":20627,"line_start":645,"line_end":645,"column_start":22,"column_end":43,"is_primary":true,"text":[{"text":"    let half_carry = (value & 0xF) - 1 < 0;","highlight_start":22,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: comparison is useless due to type limits\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/gb/cpu.rs:645:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m645\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let half_carry = (value & 0xF) - 1 < 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"73 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 73 warnings emitted\u001b[0m\n\n"}
